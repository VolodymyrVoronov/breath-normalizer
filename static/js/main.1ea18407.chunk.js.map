{"version":3,"sources":["components/common/AnimatedWrapper/AnimatedWrapper.tsx","components/StartPage/StartPage.tsx","helpers.ts","components/common/UI/BackButton/BackButton.tsx","components/Normalizer/Normalizer.tsx","components/App/App.tsx","index.tsx"],"names":["AnimatedWrapper","children","duration","to","from","attributeName","initialState","id","time","sec","StartPage","React","useState","buttons","className","map","pathname","state","type","formatTime","value","toString","BackButton","viewBox","xmlns","d","Normalizer","history","useHistory","location","useLocation","breathingDuration","setBreathingDuration","toggleAnimation","setToggleAnimation","breathingInterval","setBreathingInterval","useStopwatch","autoStart","seconds","minutes","useEffect","interval","setInterval","push","clearInterval","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ea18407.chunk.js","sourcesContent":["import React from \"react\";\r\n// @ts-ignore\r\nimport Animate from \"react-smooth\";\r\n\r\ninterface IProps {\r\n  children: React.ReactNode;\r\n  duration?: number;\r\n}\r\n\r\nconst AnimatedWrapper = ({ children, duration = 3000 }: IProps): React.ReactElement => {\r\n  return (\r\n    <Animate to=\"1\" from=\"0\" attributeName=\"opacity\" duration={duration}>\r\n      {children}\r\n    </Animate>\r\n  );\r\n};\r\n\r\nexport default AnimatedWrapper;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AnimatedWrapper from \"../common/AnimatedWrapper/AnimatedWrapper\";\r\n\r\nimport \"./StartPage.scss\";\r\n\r\ninterface IButton {\r\n  id: number;\r\n  time: number;\r\n  sec: number;\r\n}\r\n\r\nconst initialState = [\r\n  { id: 1, time: 1, sec: 60 },\r\n  { id: 2, time: 2, sec: 120 },\r\n  { id: 3, time: 5, sec: 300 },\r\n  { id: 4, time: 10, sec: 600 },\r\n];\r\n\r\nconst StartPage = (): React.ReactElement => {\r\n  const [buttons] = React.useState<IButton[]>(initialState);\r\n\r\n  return (\r\n    <AnimatedWrapper>\r\n      <div className=\"start-page\">\r\n        <h1 className=\"start-page__title\">Breath normalizer</h1>\r\n        <p className=\"start-page__info\">Если вы чувствуете, что напряжены, нервничаете и не можете справиться с дедлайнами, выделите себе несколько минут на дыхание. Разбейте цикл на пять секунд: по пять секунд на вдох и выдох. Выберите длительность и попробуйте подышать с анимацией.</p>\r\n        <div className=\"start-page__buttons\">\r\n          {buttons.map(({ id, time, sec = 60 }) => {\r\n            return (\r\n              <Link\r\n                to={{\r\n                  pathname: \"/normalizer\",\r\n                  state: {\r\n                    duration: sec,\r\n                    time,\r\n                  },\r\n                }}\r\n                key={id}\r\n                className=\"start-page__button\"\r\n                type=\"submit\"\r\n              >\r\n                {time} мин\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </AnimatedWrapper>\r\n  );\r\n};\r\n\r\nexport default StartPage;\r\n","export const formatTime = (value: number) => {\r\n  const leftDigit = value >= 10 ? value.toString()[0] : \"0\";\r\n  const rightDigit = value >= 10 ? value.toString()[1] : value.toString();\r\n\r\n  return leftDigit + rightDigit;\r\n};\r\n","import { Link } from \"react-router-dom\";\r\n\r\nimport AnimatedWrapper from \"../../AnimatedWrapper/AnimatedWrapper\";\r\n\r\nimport \"./BackButton.scss\";\r\n\r\nconst BackButton = (): React.ReactElement => {\r\n  return (\r\n    <AnimatedWrapper>\r\n      <Link to=\"/\" className=\"back-button\">\r\n        <svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <title />\r\n          <g data-name=\"Layer 2\" id=\"Layer_2\">\r\n            <path d=\"M31,16A15,15,0,1,1,16,1,15,15,0,0,1,31,16ZM3,16A13,13,0,1,0,16,3,13,13,0,0,0,3,16Z\" />\r\n            <path d=\"M19.87,10.41,14.29,16l5.58,5.59a1,1,0,0,1,0,1.41h0a1,1,0,0,1-1.41,0L12.1,16.64a.91.91,0,0,1,0-1.28L18.46,9a1,1,0,0,1,1.41,0h0A1,1,0,0,1,19.87,10.41Z\" />\r\n          </g>\r\n        </svg>\r\n      </Link>\r\n    </AnimatedWrapper>\r\n  );\r\n};\r\n\r\nexport default BackButton;\r\n","import React from \"react\";\r\nimport { useLocation, useHistory } from \"react-router\";\r\nimport { useStopwatch } from \"react-timer-hook\";\r\n\r\nimport { formatTime } from \"../../helpers\";\r\n\r\nimport BackButton from \"../common/UI/BackButton/BackButton\";\r\n\r\nimport \"./Normalizer.scss\";\r\n\r\ninterface ILocationState {\r\n  duration: number;\r\n  time: number;\r\n}\r\n\r\nconst Normalizer = (): React.ReactElement => {\r\n  const history = useHistory();\r\n  const location = useLocation<ILocationState>();\r\n\r\n  const [breathingDuration, setBreathingDuration] = React.useState<number>(0);\r\n  const [toggleAnimation, setToggleAnimation] = React.useState<boolean>(true);\r\n  const [breathingInterval, setBreathingInterval] = React.useState<number>(0);\r\n\r\n  const { seconds, minutes } = useStopwatch({ autoStart: true });\r\n\r\n  const { duration, time } = location.state;\r\n\r\n  React.useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setBreathingDuration(breathingDuration + 1);\r\n      setBreathingInterval(() => breathingInterval + 1);\r\n    }, 1000);\r\n\r\n    if (breathingDuration === duration) {\r\n      history.push(\"/\");\r\n    }\r\n\r\n    if (breathingInterval === 5) {\r\n      setBreathingInterval(0);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [breathingDuration, breathingInterval]);\r\n\r\n  React.useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setBreathingInterval(() => breathingInterval + 1);\r\n    }, 1000);\r\n    if (breathingInterval === 5) {\r\n      setBreathingInterval(0);\r\n      setToggleAnimation(!toggleAnimation);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [breathingInterval]);\r\n\r\n  return (\r\n    <div className=\"normalizer\">\r\n      <BackButton />\r\n      <header className=\"normalizer__header\">\r\n        <p className=\"normalizer__header-text\">Время сеанса: {time} мин.</p>\r\n      </header>\r\n      <p className=\"normalizer__text\">{toggleAnimation ? \"Вдох\" : \"Выдох\"}</p>\r\n      <ul className=\"normalizer__bars\">\r\n        <li\r\n          className={`normalizer__bar normalizer__bar--1 \r\n        ${toggleAnimation ? breathingInterval === 4 && \"normalizer__bar--show\" : breathingInterval === 0 && \"normalizer__bar--show\"}`}\r\n        />\r\n        <li\r\n          className={`normalizer__bar normalizer__bar--2\r\n          ${toggleAnimation ? breathingInterval === 3 && \"normalizer__bar--show\" : breathingInterval === 1 && \"normalizer__bar--show\"}`}\r\n        />\r\n        <li\r\n          className={`normalizer__bar normalizer__bar--3\r\n          ${toggleAnimation ? breathingInterval === 2 && \"normalizer__bar--show\" : breathingInterval === 2 && \"normalizer__bar--show\"}`}\r\n        />\r\n        <li\r\n          className={`normalizer__bar normalizer__bar--4\r\n          ${toggleAnimation ? breathingInterval === 1 && \"normalizer__bar--show\" : breathingInterval === 3 && \"normalizer__bar--show\"}`}\r\n        />\r\n        <li\r\n          className={`normalizer__bar normalizer__bar--5\r\n          ${toggleAnimation ? breathingInterval === 0 && \"normalizer__bar--show\" : breathingInterval === 4 && \"normalizer__bar--show\"}`}\r\n        />\r\n      </ul>\r\n\r\n      <div className=\"normalizer__timer\">\r\n        <p className=\"normalizer__timer-text\">{formatTime(minutes)}:</p>\r\n        <p className=\"normalizer__timer-text\">{formatTime(seconds)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Normalizer;\r\n","import { Switch, Route } from \"react-router-dom\";\n\nimport StartPage from \"./../StartPage/StartPage\";\nimport Normalizer from \"./../Normalizer/Normalizer\";\n\nconst App = (): React.ReactElement => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\">\n          <StartPage />\n        </Route>\n        <Route exact path=\"/normalizer\">\n          <Normalizer />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { HashRouter } from \"react-router-dom\";\n\nimport App from \"./components/App/App\";\n\nimport \"./styles/reset.scss\";\nimport \"./styles/global.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}